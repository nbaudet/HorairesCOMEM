package com.Wsdl2Code.WebServices.Service;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 3/21/2014 5:15:46 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class RequestEntity implements KvmSerializable {
    
    public String classIdField;
    public String teacherId;
    public String moduleId;
    public String courseId;
    public String startingDate;
    public String endingDate;
    
    public RequestEntity(){}
    
    public RequestEntity(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ClassId"))
        {
            Object obj = soapObject.getProperty("ClassId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                classIdField = j.toString();
            }else if (obj!= null && obj instanceof String){
                classIdField = (String) obj;
            }
        }
        if (soapObject.hasProperty("TeacherId"))
        {
            Object obj = soapObject.getProperty("TeacherId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                teacherId = j.toString();
            }else if (obj!= null && obj instanceof String){
                teacherId = (String) obj;
            }
        }
        if (soapObject.hasProperty("ModuleId"))
        {
            Object obj = soapObject.getProperty("ModuleId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                moduleId = j.toString();
            }else if (obj!= null && obj instanceof String){
                moduleId = (String) obj;
            }
        }
        if (soapObject.hasProperty("CourseId"))
        {
            Object obj = soapObject.getProperty("CourseId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                courseId = j.toString();
            }else if (obj!= null && obj instanceof String){
                courseId = (String) obj;
            }
        }
        if (soapObject.hasProperty("StartingDate"))
        {
            Object obj = soapObject.getProperty("StartingDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                startingDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                startingDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("EndingDate"))
        {
            Object obj = soapObject.getProperty("EndingDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                endingDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                endingDate = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return classIdField;
            case 1:
                return teacherId;
            case 2:
                return moduleId;
            case 3:
                return courseId;
            case 4:
                return startingDate;
            case 5:
                return endingDate;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 6;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ClassId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TeacherId";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ModuleId";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CourseId";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "StartingDate";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EndingDate";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
